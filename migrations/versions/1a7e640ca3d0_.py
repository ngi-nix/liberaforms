"""empty message

Revision ID: 1a7e640ca3d0
Revises: 
Create Date: 2021-03-31 13:57:41.039297

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1a7e640ca3d0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('invites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=True),
    sa.Column('token', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invites_id'), 'invites', ['id'], unique=False)
    op.create_table('site',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.Date(), nullable=False),
    sa.Column('hostname', sa.String(), nullable=False),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('scheme', sa.String(), nullable=False),
    sa.Column('siteName', sa.String(), nullable=False),
    sa.Column('defaultLanguage', sa.String(), nullable=False),
    sa.Column('menuColor', sa.String(), nullable=False),
    sa.Column('invitationOnly', sa.Boolean(), nullable=True),
    sa.Column('consentTexts', postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())), nullable=False),
    sa.Column('newUserConsentment', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('smtpConfig', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('blurb', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_site_id'), 'site', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.Date(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('blocked', sa.Boolean(), nullable=True),
    sa.Column('admin', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('validatedEmail', sa.Boolean(), nullable=True),
    sa.Column('token', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('consentTexts', postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('forms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.Date(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('structure', postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())), nullable=False),
    sa.Column('fieldIndex', postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())), nullable=False),
    sa.Column('editors', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('expired', sa.Boolean(), nullable=True),
    sa.Column('sendConfirmation', sa.Boolean(), nullable=True),
    sa.Column('expiryConditions', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('sharedEntries', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('restrictedAccess', sa.Boolean(), nullable=True),
    sa.Column('adminPreferences', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('introductionText', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('afterSubmitText', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('expiredText', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('consentTexts', postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_index(op.f('ix_forms_id'), 'forms', ['id'], unique=False)
    op.create_table('answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('marked', sa.Boolean(), nullable=True),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['form_id'], ['forms.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_answers_id'), 'answers', ['id'], unique=False)
    op.create_table('form_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['form_id'], ['forms.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_form_logs_id'), 'form_logs', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_form_logs_id'), table_name='form_logs')
    op.drop_table('form_logs')
    op.drop_index(op.f('ix_answers_id'), table_name='answers')
    op.drop_table('answers')
    op.drop_index(op.f('ix_forms_id'), table_name='forms')
    op.drop_table('forms')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_site_id'), table_name='site')
    op.drop_table('site')
    op.drop_index(op.f('ix_invites_id'), table_name='invites')
    op.drop_table('invites')
    # ### end Alembic commands ###
